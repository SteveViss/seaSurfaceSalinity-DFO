---
title: "Raster quality assessment"
---

## Load rasters

```{R load-rasters}
rs_filenames <- list.files("data/SSS-OC-prep", pattern = "*.tif$", full.names = TRUE)
rasters <- terra::rast(rs_filenames)
```

## Data validation

### Salinity range values for each timestamp

Get descriptive stats

```{R stats}
stats <- lapply(rasters,
        terra::global, fun = c("mean", "sd", "min", "max"), na.rm=TRUE, .progress = TRUE
    ) |> 
    dplyr::bind_rows() |>
    dplyr::mutate(timestamp = terra::time(rasters))
```

Do we have rasters with salinity values not between 0 and 37?

```{R}
dplyr::filter(stats, min < 0 | max > 37)
```

### How many cells contains NA's (without inland cells)?

NAs often result from clouds, quite frequently from sea ice, and sometimes from areas that were not scanned by satellites on certain days. In the rarer category, there are numerous reasons why ocean color data may be unavailable, including instances of atmospheric correction failure.

```{R}
ne_land <- rnaturalearth::ne_download(category = "physical", type = "land", returnclass = "sf", scale = "large") |> sf::st_make_valid()

rs_land <- terra::rasterize(ne_land, rasters[[1]])
ncells_water <- terra::classify(rs_land, rbind(c(1, NA), c(NA, 1))) |>
    terra::global(fun="notNA")

cover <- lapply(rasters[[1:1000]], \(r){
    (terra::global(r, fun="notNA") / ncells_water) * 100
}) |> dplyr::bind_rows()
```


### Explo with Julien

```{R}
#### JUL - Temporal trends
# Calculate TS
YMmean <- terra::tapp(rasters, "yearmonths", mean, na.rm=T)
YMmean_col <- terra::global(YMmean, mean, na.rm=T)
YMnotna_col <- terra::global(YMmean, 'notNA', na.rm=T)
dates <- zoo::as.yearmon(row.names(YMmean_col), "ym_%Y%m")

# DF
Ts <- tibble::tibble(dates, YMmean_col, YMnotna_col)

# Quick look
library(ggplot2)
ggplot(Ts) + geom_point(aes(x=dates,y=mean)) + zoo::scale_x_yearmon()

Ts |>dplyr::mutate(ym = as.Date(dates, format = "%Y-%m")) |>
    #mutate(decidate = decimal_date(as.Date(dates))) %>% 
    ggplot(aes(x=ym,y=mean)) +
    geom_point(aes(size=notNA)) +
    geom_line() +
    facet_wrap(~year(ym), ncol=1, scales = 'free_x') +
    scale_x_date(labels = date_format("%Y-%m"))
```
